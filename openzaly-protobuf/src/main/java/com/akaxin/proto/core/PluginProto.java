// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/plugin.proto

package com.akaxin.proto.core;

public final class PluginProto {
  private PluginProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *header 里面
   * </pre>
   *
   * Protobuf enum {@code core.PluginHeaderKey}
   */
  public enum PluginHeaderKey
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLIENT_VERSION = 0;</code>
     */
    CLIENT_VERSION(0),
    /**
     * <pre>
     *当前客户端用户ID
     * </pre>
     *
     * <code>CLIENT_SITE_USER_ID = 1;</code>
     */
    CLIENT_SITE_USER_ID(1),
    /**
     * <pre>
     *当前用户的sessionID
     * </pre>
     *
     * <code>CLIENT_SITE_SESSION_ID = 2;</code>
     */
    CLIENT_SITE_SESSION_ID(2),
    /**
     * <pre>
     *使用zaly:goto
     * </pre>
     *
     * <code>PLUGIN_REFERER = 3;</code>
     */
    PLUGIN_REFERER(3),
    /**
     * <pre>
     *单位ms
     * </pre>
     *
     * <code>PLUGIN_TIMESTAMP = 4;</code>
     */
    PLUGIN_TIMESTAMP(4),
    /**
     * <pre>
     *扩展的ID
     * </pre>
     *
     * <code>PLUGIN_ID = 5;</code>
     */
    PLUGIN_ID(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CLIENT_VERSION = 0;</code>
     */
    public static final int CLIENT_VERSION_VALUE = 0;
    /**
     * <pre>
     *当前客户端用户ID
     * </pre>
     *
     * <code>CLIENT_SITE_USER_ID = 1;</code>
     */
    public static final int CLIENT_SITE_USER_ID_VALUE = 1;
    /**
     * <pre>
     *当前用户的sessionID
     * </pre>
     *
     * <code>CLIENT_SITE_SESSION_ID = 2;</code>
     */
    public static final int CLIENT_SITE_SESSION_ID_VALUE = 2;
    /**
     * <pre>
     *使用zaly:goto
     * </pre>
     *
     * <code>PLUGIN_REFERER = 3;</code>
     */
    public static final int PLUGIN_REFERER_VALUE = 3;
    /**
     * <pre>
     *单位ms
     * </pre>
     *
     * <code>PLUGIN_TIMESTAMP = 4;</code>
     */
    public static final int PLUGIN_TIMESTAMP_VALUE = 4;
    /**
     * <pre>
     *扩展的ID
     * </pre>
     *
     * <code>PLUGIN_ID = 5;</code>
     */
    public static final int PLUGIN_ID_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PluginHeaderKey valueOf(int value) {
      return forNumber(value);
    }

    public static PluginHeaderKey forNumber(int value) {
      switch (value) {
        case 0: return CLIENT_VERSION;
        case 1: return CLIENT_SITE_USER_ID;
        case 2: return CLIENT_SITE_SESSION_ID;
        case 3: return PLUGIN_REFERER;
        case 4: return PLUGIN_TIMESTAMP;
        case 5: return PLUGIN_ID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PluginHeaderKey>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PluginHeaderKey> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PluginHeaderKey>() {
            public PluginHeaderKey findValueByNumber(int number) {
              return PluginHeaderKey.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final PluginHeaderKey[] VALUES = values();

    public static PluginHeaderKey valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PluginHeaderKey(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.PluginHeaderKey)
  }

  /**
   * Protobuf enum {@code core.PermissionStatus}
   */
  public enum PermissionStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *禁用状态
     * </pre>
     *
     * <code>DISABLED = 0;</code>
     */
    DISABLED(0),
    /**
     * <pre>
     *可用状态
     * </pre>
     *
     * <code>AVAILABLE = 1;</code>
     */
    AVAILABLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *禁用状态
     * </pre>
     *
     * <code>DISABLED = 0;</code>
     */
    public static final int DISABLED_VALUE = 0;
    /**
     * <pre>
     *可用状态
     * </pre>
     *
     * <code>AVAILABLE = 1;</code>
     */
    public static final int AVAILABLE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PermissionStatus valueOf(int value) {
      return forNumber(value);
    }

    public static PermissionStatus forNumber(int value) {
      switch (value) {
        case 0: return DISABLED;
        case 1: return AVAILABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PermissionStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PermissionStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PermissionStatus>() {
            public PermissionStatus findValueByNumber(int number) {
              return PermissionStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final PermissionStatus[] VALUES = values();

    public static PermissionStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PermissionStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.PermissionStatus)
  }

  /**
   * Protobuf enum {@code core.PluginPosition}
   */
  public enum PluginPosition
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *首页位置
     * </pre>
     *
     * <code>HOME_PAGE = 0;</code>
     */
    HOME_PAGE(0),
    /**
     * <pre>
     *消息帧位置
     * </pre>
     *
     * <code>MSG_PAGE = 1;</code>
     */
    MSG_PAGE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *首页位置
     * </pre>
     *
     * <code>HOME_PAGE = 0;</code>
     */
    public static final int HOME_PAGE_VALUE = 0;
    /**
     * <pre>
     *消息帧位置
     * </pre>
     *
     * <code>MSG_PAGE = 1;</code>
     */
    public static final int MSG_PAGE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PluginPosition valueOf(int value) {
      return forNumber(value);
    }

    public static PluginPosition forNumber(int value) {
      switch (value) {
        case 0: return HOME_PAGE;
        case 1: return MSG_PAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PluginPosition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PluginPosition> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PluginPosition>() {
            public PluginPosition findValueByNumber(int number) {
              return PluginPosition.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final PluginPosition[] VALUES = values();

    public static PluginPosition valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PluginPosition(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.PluginPosition)
  }

  /**
   * Protobuf enum {@code core.PluginDisplayMode}
   */
  public enum PluginDisplayMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *默认，新页面
     * </pre>
     *
     * <code>NEW_PAGE = 0;</code>
     */
    NEW_PAGE(0),
    /**
     * <pre>
     *浮屏
     * </pre>
     *
     * <code>FLOATING_SCREEN = 1;</code>
     */
    FLOATING_SCREEN(1),
    /**
     * <pre>
     *分屏
     * </pre>
     *
     * <code>SPLIT_SCREEN = 2;</code>
     */
    SPLIT_SCREEN(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *默认，新页面
     * </pre>
     *
     * <code>NEW_PAGE = 0;</code>
     */
    public static final int NEW_PAGE_VALUE = 0;
    /**
     * <pre>
     *浮屏
     * </pre>
     *
     * <code>FLOATING_SCREEN = 1;</code>
     */
    public static final int FLOATING_SCREEN_VALUE = 1;
    /**
     * <pre>
     *分屏
     * </pre>
     *
     * <code>SPLIT_SCREEN = 2;</code>
     */
    public static final int SPLIT_SCREEN_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PluginDisplayMode valueOf(int value) {
      return forNumber(value);
    }

    public static PluginDisplayMode forNumber(int value) {
      switch (value) {
        case 0: return NEW_PAGE;
        case 1: return FLOATING_SCREEN;
        case 2: return SPLIT_SCREEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PluginDisplayMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PluginDisplayMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PluginDisplayMode>() {
            public PluginDisplayMode findValueByNumber(int number) {
              return PluginDisplayMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final PluginDisplayMode[] VALUES = values();

    public static PluginDisplayMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PluginDisplayMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:core.PluginDisplayMode)
  }

  public interface ProxyPluginPackageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.ProxyPluginPackage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */
    int getPluginHeaderCount();
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */
    boolean containsPluginHeader(
        int key);
    /**
     * Use {@link #getPluginHeaderMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getPluginHeader();
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getPluginHeaderMap();
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    java.lang.String getPluginHeaderOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    java.lang.String getPluginHeaderOrThrow(
        int key);

    /**
     * <pre>
     *data在赋值之前先base64
     *site -&gt; plugin 是开发者自定义的格式
     *plugin -&gt; site 为具体请求的proto格式
     * </pre>
     *
     * <code>optional string data = 2;</code>
     */
    java.lang.String getData();
    /**
     * <pre>
     *data在赋值之前先base64
     *site -&gt; plugin 是开发者自定义的格式
     *plugin -&gt; site 为具体请求的proto格式
     * </pre>
     *
     * <code>optional string data = 2;</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    boolean hasErrorInfo();
    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    com.akaxin.proto.core.CoreProto.ErrorInfo getErrorInfo();
    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder getErrorInfoOrBuilder();
  }
  /**
   * <pre>
   * site 与plugin之间交互传输的package包
   * </pre>
   *
   * Protobuf type {@code core.ProxyPluginPackage}
   */
  public  static final class ProxyPluginPackage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.ProxyPluginPackage)
      ProxyPluginPackageOrBuilder {
    // Use ProxyPluginPackage.newBuilder() to construct.
    private ProxyPluginPackage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProxyPluginPackage() {
      data_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ProxyPluginPackage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                pluginHeader_ = com.google.protobuf.MapField.newMapField(
                    PluginHeaderDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              pluginHeader = input.readMessage(
                  PluginHeaderDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              pluginHeader_.getMutableMap().put(pluginHeader.getKey(), pluginHeader.getValue());
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              data_ = s;
              break;
            }
            case 26: {
              com.akaxin.proto.core.CoreProto.ErrorInfo.Builder subBuilder = null;
              if (errorInfo_ != null) {
                subBuilder = errorInfo_.toBuilder();
              }
              errorInfo_ = input.readMessage(com.akaxin.proto.core.CoreProto.ErrorInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(errorInfo_);
                errorInfo_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetPluginHeader();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akaxin.proto.core.PluginProto.ProxyPluginPackage.class, com.akaxin.proto.core.PluginProto.ProxyPluginPackage.Builder.class);
    }

    private int bitField0_;
    public static final int PLUGIN_HEADER_FIELD_NUMBER = 1;
    private static final class PluginHeaderDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_PluginHeaderEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> pluginHeader_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetPluginHeader() {
      if (pluginHeader_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PluginHeaderDefaultEntryHolder.defaultEntry);
      }
      return pluginHeader_;
    }

    public int getPluginHeaderCount() {
      return internalGetPluginHeader().getMap().size();
    }
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    public boolean containsPluginHeader(
        int key) {
      
      return internalGetPluginHeader().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPluginHeaderMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getPluginHeader() {
      return getPluginHeaderMap();
    }
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.String> getPluginHeaderMap() {
      return internalGetPluginHeader().getMap();
    }
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    public java.lang.String getPluginHeaderOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetPluginHeader().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *header
     * </pre>
     *
     * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
     */

    public java.lang.String getPluginHeaderOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetPluginHeader().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private volatile java.lang.Object data_;
    /**
     * <pre>
     *data在赋值之前先base64
     *site -&gt; plugin 是开发者自定义的格式
     *plugin -&gt; site 为具体请求的proto格式
     * </pre>
     *
     * <code>optional string data = 2;</code>
     */
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        data_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *data在赋值之前先base64
     *site -&gt; plugin 是开发者自定义的格式
     *plugin -&gt; site 为具体请求的proto格式
     * </pre>
     *
     * <code>optional string data = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERROR_INFO_FIELD_NUMBER = 3;
    private com.akaxin.proto.core.CoreProto.ErrorInfo errorInfo_;
    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    public boolean hasErrorInfo() {
      return errorInfo_ != null;
    }
    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    public com.akaxin.proto.core.CoreProto.ErrorInfo getErrorInfo() {
      return errorInfo_ == null ? com.akaxin.proto.core.CoreProto.ErrorInfo.getDefaultInstance() : errorInfo_;
    }
    /**
     * <pre>
     *error信息
     * </pre>
     *
     * <code>optional .core.ErrorInfo error_info = 3;</code>
     */
    public com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder getErrorInfoOrBuilder() {
      return getErrorInfo();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetPluginHeader().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        pluginHeader = PluginHeaderDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(1, pluginHeader);
      }
      if (!getDataBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, data_);
      }
      if (errorInfo_ != null) {
        output.writeMessage(3, getErrorInfo());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetPluginHeader().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        pluginHeader = PluginHeaderDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, pluginHeader);
      }
      if (!getDataBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, data_);
      }
      if (errorInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getErrorInfo());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akaxin.proto.core.PluginProto.ProxyPluginPackage)) {
        return super.equals(obj);
      }
      com.akaxin.proto.core.PluginProto.ProxyPluginPackage other = (com.akaxin.proto.core.PluginProto.ProxyPluginPackage) obj;

      boolean result = true;
      result = result && internalGetPluginHeader().equals(
          other.internalGetPluginHeader());
      result = result && getData()
          .equals(other.getData());
      result = result && (hasErrorInfo() == other.hasErrorInfo());
      if (hasErrorInfo()) {
        result = result && getErrorInfo()
            .equals(other.getErrorInfo());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (!internalGetPluginHeader().getMap().isEmpty()) {
        hash = (37 * hash) + PLUGIN_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPluginHeader().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      if (hasErrorInfo()) {
        hash = (37 * hash) + ERROR_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getErrorInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.core.PluginProto.ProxyPluginPackage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * site 与plugin之间交互传输的package包
     * </pre>
     *
     * Protobuf type {@code core.ProxyPluginPackage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.ProxyPluginPackage)
        com.akaxin.proto.core.PluginProto.ProxyPluginPackageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetPluginHeader();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutablePluginHeader();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akaxin.proto.core.PluginProto.ProxyPluginPackage.class, com.akaxin.proto.core.PluginProto.ProxyPluginPackage.Builder.class);
      }

      // Construct using com.akaxin.proto.core.PluginProto.ProxyPluginPackage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutablePluginHeader().clear();
        data_ = "";

        if (errorInfoBuilder_ == null) {
          errorInfo_ = null;
        } else {
          errorInfo_ = null;
          errorInfoBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_ProxyPluginPackage_descriptor;
      }

      public com.akaxin.proto.core.PluginProto.ProxyPluginPackage getDefaultInstanceForType() {
        return com.akaxin.proto.core.PluginProto.ProxyPluginPackage.getDefaultInstance();
      }

      public com.akaxin.proto.core.PluginProto.ProxyPluginPackage build() {
        com.akaxin.proto.core.PluginProto.ProxyPluginPackage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.akaxin.proto.core.PluginProto.ProxyPluginPackage buildPartial() {
        com.akaxin.proto.core.PluginProto.ProxyPluginPackage result = new com.akaxin.proto.core.PluginProto.ProxyPluginPackage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.pluginHeader_ = internalGetPluginHeader();
        result.pluginHeader_.makeImmutable();
        result.data_ = data_;
        if (errorInfoBuilder_ == null) {
          result.errorInfo_ = errorInfo_;
        } else {
          result.errorInfo_ = errorInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akaxin.proto.core.PluginProto.ProxyPluginPackage) {
          return mergeFrom((com.akaxin.proto.core.PluginProto.ProxyPluginPackage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akaxin.proto.core.PluginProto.ProxyPluginPackage other) {
        if (other == com.akaxin.proto.core.PluginProto.ProxyPluginPackage.getDefaultInstance()) return this;
        internalGetMutablePluginHeader().mergeFrom(
            other.internalGetPluginHeader());
        if (!other.getData().isEmpty()) {
          data_ = other.data_;
          onChanged();
        }
        if (other.hasErrorInfo()) {
          mergeErrorInfo(other.getErrorInfo());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.akaxin.proto.core.PluginProto.ProxyPluginPackage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.akaxin.proto.core.PluginProto.ProxyPluginPackage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> pluginHeader_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetPluginHeader() {
        if (pluginHeader_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PluginHeaderDefaultEntryHolder.defaultEntry);
        }
        return pluginHeader_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutablePluginHeader() {
        onChanged();;
        if (pluginHeader_ == null) {
          pluginHeader_ = com.google.protobuf.MapField.newMapField(
              PluginHeaderDefaultEntryHolder.defaultEntry);
        }
        if (!pluginHeader_.isMutable()) {
          pluginHeader_ = pluginHeader_.copy();
        }
        return pluginHeader_;
      }

      public int getPluginHeaderCount() {
        return internalGetPluginHeader().getMap().size();
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public boolean containsPluginHeader(
          int key) {
        
        return internalGetPluginHeader().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPluginHeaderMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getPluginHeader() {
        return getPluginHeaderMap();
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.String> getPluginHeaderMap() {
        return internalGetPluginHeader().getMap();
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public java.lang.String getPluginHeaderOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetPluginHeader().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public java.lang.String getPluginHeaderOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetPluginHeader().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPluginHeader() {
        getMutablePluginHeader().clear();
        return this;
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public Builder removePluginHeader(
          int key) {
        
        getMutablePluginHeader().remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutablePluginHeader() {
        return internalGetMutablePluginHeader().getMutableMap();
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */
      public Builder putPluginHeader(
          int key,
          java.lang.String value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        getMutablePluginHeader().put(key, value);
        return this;
      }
      /**
       * <pre>
       *header
       * </pre>
       *
       * <code>map&lt;int32, string&gt; plugin_header = 1;</code>
       */

      public Builder putAllPluginHeader(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        getMutablePluginHeader().putAll(values);
        return this;
      }

      private java.lang.Object data_ = "";
      /**
       * <pre>
       *data在赋值之前先base64
       *site -&gt; plugin 是开发者自定义的格式
       *plugin -&gt; site 为具体请求的proto格式
       * </pre>
       *
       * <code>optional string data = 2;</code>
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *data在赋值之前先base64
       *site -&gt; plugin 是开发者自定义的格式
       *plugin -&gt; site 为具体请求的proto格式
       * </pre>
       *
       * <code>optional string data = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *data在赋值之前先base64
       *site -&gt; plugin 是开发者自定义的格式
       *plugin -&gt; site 为具体请求的proto格式
       * </pre>
       *
       * <code>optional string data = 2;</code>
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *data在赋值之前先base64
       *site -&gt; plugin 是开发者自定义的格式
       *plugin -&gt; site 为具体请求的proto格式
       * </pre>
       *
       * <code>optional string data = 2;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *data在赋值之前先base64
       *site -&gt; plugin 是开发者自定义的格式
       *plugin -&gt; site 为具体请求的proto格式
       * </pre>
       *
       * <code>optional string data = 2;</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        data_ = value;
        onChanged();
        return this;
      }

      private com.akaxin.proto.core.CoreProto.ErrorInfo errorInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.ErrorInfo, com.akaxin.proto.core.CoreProto.ErrorInfo.Builder, com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder> errorInfoBuilder_;
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public boolean hasErrorInfo() {
        return errorInfoBuilder_ != null || errorInfo_ != null;
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.ErrorInfo getErrorInfo() {
        if (errorInfoBuilder_ == null) {
          return errorInfo_ == null ? com.akaxin.proto.core.CoreProto.ErrorInfo.getDefaultInstance() : errorInfo_;
        } else {
          return errorInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public Builder setErrorInfo(com.akaxin.proto.core.CoreProto.ErrorInfo value) {
        if (errorInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          errorInfo_ = value;
          onChanged();
        } else {
          errorInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public Builder setErrorInfo(
          com.akaxin.proto.core.CoreProto.ErrorInfo.Builder builderForValue) {
        if (errorInfoBuilder_ == null) {
          errorInfo_ = builderForValue.build();
          onChanged();
        } else {
          errorInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public Builder mergeErrorInfo(com.akaxin.proto.core.CoreProto.ErrorInfo value) {
        if (errorInfoBuilder_ == null) {
          if (errorInfo_ != null) {
            errorInfo_ =
              com.akaxin.proto.core.CoreProto.ErrorInfo.newBuilder(errorInfo_).mergeFrom(value).buildPartial();
          } else {
            errorInfo_ = value;
          }
          onChanged();
        } else {
          errorInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public Builder clearErrorInfo() {
        if (errorInfoBuilder_ == null) {
          errorInfo_ = null;
          onChanged();
        } else {
          errorInfo_ = null;
          errorInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.ErrorInfo.Builder getErrorInfoBuilder() {
        
        onChanged();
        return getErrorInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      public com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder getErrorInfoOrBuilder() {
        if (errorInfoBuilder_ != null) {
          return errorInfoBuilder_.getMessageOrBuilder();
        } else {
          return errorInfo_ == null ?
              com.akaxin.proto.core.CoreProto.ErrorInfo.getDefaultInstance() : errorInfo_;
        }
      }
      /**
       * <pre>
       *error信息
       * </pre>
       *
       * <code>optional .core.ErrorInfo error_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.akaxin.proto.core.CoreProto.ErrorInfo, com.akaxin.proto.core.CoreProto.ErrorInfo.Builder, com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder> 
          getErrorInfoFieldBuilder() {
        if (errorInfoBuilder_ == null) {
          errorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.akaxin.proto.core.CoreProto.ErrorInfo, com.akaxin.proto.core.CoreProto.ErrorInfo.Builder, com.akaxin.proto.core.CoreProto.ErrorInfoOrBuilder>(
                  getErrorInfo(),
                  getParentForChildren(),
                  isClean());
          errorInfo_ = null;
        }
        return errorInfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:core.ProxyPluginPackage)
    }

    // @@protoc_insertion_point(class_scope:core.ProxyPluginPackage)
    private static final com.akaxin.proto.core.PluginProto.ProxyPluginPackage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akaxin.proto.core.PluginProto.ProxyPluginPackage();
    }

    public static com.akaxin.proto.core.PluginProto.ProxyPluginPackage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProxyPluginPackage>
        PARSER = new com.google.protobuf.AbstractParser<ProxyPluginPackage>() {
      public ProxyPluginPackage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProxyPluginPackage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProxyPluginPackage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProxyPluginPackage> getParserForType() {
      return PARSER;
    }

    public com.akaxin.proto.core.PluginProto.ProxyPluginPackage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PluginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:core.Plugin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 对于一个特定的Site，plugin.id 是唯一的。
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * 对于一个特定的Site，plugin.id 是唯一的。
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * 扩展名字，会显示在界面上
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * 扩展名字，会显示在界面上
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * 落地页地址
     * 以http或https开头，客户端直接以url_page作为网址渲染webview
     * 否则，为api.proxy.page 请求的page参数值，默认为空
     * 如：
     * value= https://www.google.com 直接以此网址加载webview。
     * value= main，代表通过api.proxy.page接口请求main页面。
     * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
     * </pre>
     *
     * <code>optional string url_page = 3;</code>
     */
    java.lang.String getUrlPage();
    /**
     * <pre>
     * 落地页地址
     * 以http或https开头，客户端直接以url_page作为网址渲染webview
     * 否则，为api.proxy.page 请求的page参数值，默认为空
     * 如：
     * value= https://www.google.com 直接以此网址加载webview。
     * value= main，代表通过api.proxy.page接口请求main页面。
     * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
     * </pre>
     *
     * <code>optional string url_page = 3;</code>
     */
    com.google.protobuf.ByteString
        getUrlPageBytes();

    /**
     * <pre>
     * api.plugin.proxy 请求转发请求时的目的URL
     * 此URL只能以http或者https开头，如无则为http
     * ====IMPORTANT====
     * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
     * </pre>
     *
     * <code>optional string api_url = 4;</code>
     */
    java.lang.String getApiUrl();
    /**
     * <pre>
     * api.plugin.proxy 请求转发请求时的目的URL
     * 此URL只能以http或者https开头，如无则为http
     * ====IMPORTANT====
     * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
     * </pre>
     *
     * <code>optional string api_url = 4;</code>
     */
    com.google.protobuf.ByteString
        getApiUrlBytes();

    /**
     * <pre>
     * 扩展图标文件，会显示在界面上
     * 如果以http开头，则代表着这是一个http协议的文件。
     * 否则，通过site-download功能下载此图片。
     * </pre>
     *
     * <code>optional string icon = 5;</code>
     */
    java.lang.String getIcon();
    /**
     * <pre>
     * 扩展图标文件，会显示在界面上
     * 如果以http开头，则代表着这是一个http协议的文件。
     * 否则，通过site-download功能下载此图片。
     * </pre>
     *
     * <code>optional string icon = 5;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    /**
     * <pre>
     * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
     * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
     * site 使用auth_key 加密发送给plugin的整个proto
     * 同时 site使用auth_key解析 plugin传递过来的具体proto值
     * </pre>
     *
     * <code>optional string auth_key = 6;</code>
     */
    java.lang.String getAuthKey();
    /**
     * <pre>
     * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
     * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
     * site 使用auth_key 加密发送给plugin的整个proto
     * 同时 site使用auth_key解析 plugin传递过来的具体proto值
     * </pre>
     *
     * <code>optional string auth_key = 6;</code>
     */
    com.google.protobuf.ByteString
        getAuthKeyBytes();

    /**
     * <pre>
     * site server的innerAPI允许的pluginServer地址。
     * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
     * 如果有多个ip，以英文逗号[,]隔开。
     * </pre>
     *
     * <code>optional string allowed_ip = 7;</code>
     */
    java.lang.String getAllowedIp();
    /**
     * <pre>
     * site server的innerAPI允许的pluginServer地址。
     * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
     * 如果有多个ip，以英文逗号[,]隔开。
     * </pre>
     *
     * <code>optional string allowed_ip = 7;</code>
     */
    com.google.protobuf.ByteString
        getAllowedIpBytes();

    /**
     * <pre>
     * 扩展的位置【应该为一个枚举】
     * 值：首页、消息帧
     * 本次不允许首页并且消息帧这个类型。
     * </pre>
     *
     * <code>optional .core.PluginPosition position = 8;</code>
     */
    int getPositionValue();
    /**
     * <pre>
     * 扩展的位置【应该为一个枚举】
     * 值：首页、消息帧
     * 本次不允许首页并且消息帧这个类型。
     * </pre>
     *
     * <code>optional .core.PluginPosition position = 8;</code>
     */
    com.akaxin.proto.core.PluginProto.PluginPosition getPosition();

    /**
     * <pre>
     * 显示顺序
     * 当一个位置，有多个扩展时，此处描述顺序，数字越小，排列越靠前（从上往下，从左往右排列）
     * </pre>
     *
     * <code>optional int32 order = 9;</code>
     */
    int getOrder();

    /**
     * <pre>
     * 展现方式【应该为一个枚举】
     * 默认、浮屏、分屏
     * 目前写死【默认】
     * </pre>
     *
     * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
     */
    int getDisplayModeValue();
    /**
     * <pre>
     * 展现方式【应该为一个枚举】
     * 默认、浮屏、分屏
     * 目前写死【默认】
     * </pre>
     *
     * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
     */
    com.akaxin.proto.core.PluginProto.PluginDisplayMode getDisplayMode();

    /**
     * <pre>
     * 可用状态
     * - 禁用
     * - 管理员可用
     * - 全员可用
     * </pre>
     *
     * <code>optional .core.PermissionStatus permission_status = 11;</code>
     */
    int getPermissionStatusValue();
    /**
     * <pre>
     * 可用状态
     * - 禁用
     * - 管理员可用
     * - 全员可用
     * </pre>
     *
     * <code>optional .core.PermissionStatus permission_status = 11;</code>
     */
    com.akaxin.proto.core.PluginProto.PermissionStatus getPermissionStatus();

    /**
     * <pre>
     * 使用auth_key加密的用户session
     * </pre>
     *
     * <code>optional string encrypted_session_id_base64 = 12;</code>
     */
    java.lang.String getEncryptedSessionIdBase64();
    /**
     * <pre>
     * 使用auth_key加密的用户session
     * </pre>
     *
     * <code>optional string encrypted_session_id_base64 = 12;</code>
     */
    com.google.protobuf.ByteString
        getEncryptedSessionIdBase64Bytes();
  }
  /**
   * Protobuf type {@code core.Plugin}
   */
  public  static final class Plugin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:core.Plugin)
      PluginOrBuilder {
    // Use Plugin.newBuilder() to construct.
    private Plugin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Plugin() {
      id_ = "";
      name_ = "";
      urlPage_ = "";
      apiUrl_ = "";
      icon_ = "";
      authKey_ = "";
      allowedIp_ = "";
      position_ = 0;
      order_ = 0;
      displayMode_ = 0;
      permissionStatus_ = 0;
      encryptedSessionIdBase64_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Plugin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              urlPage_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              apiUrl_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              icon_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              authKey_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              allowedIp_ = s;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              position_ = rawValue;
              break;
            }
            case 72: {

              order_ = input.readInt32();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();

              displayMode_ = rawValue;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();

              permissionStatus_ = rawValue;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              encryptedSessionIdBase64_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.akaxin.proto.core.PluginProto.internal_static_core_Plugin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.akaxin.proto.core.PluginProto.internal_static_core_Plugin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.akaxin.proto.core.PluginProto.Plugin.class, com.akaxin.proto.core.PluginProto.Plugin.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * 对于一个特定的Site，plugin.id 是唯一的。
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 对于一个特定的Site，plugin.id 是唯一的。
     * </pre>
     *
     * <code>optional string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * 扩展名字，会显示在界面上
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 扩展名字，会显示在界面上
     * </pre>
     *
     * <code>optional string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int URL_PAGE_FIELD_NUMBER = 3;
    private volatile java.lang.Object urlPage_;
    /**
     * <pre>
     * 落地页地址
     * 以http或https开头，客户端直接以url_page作为网址渲染webview
     * 否则，为api.proxy.page 请求的page参数值，默认为空
     * 如：
     * value= https://www.google.com 直接以此网址加载webview。
     * value= main，代表通过api.proxy.page接口请求main页面。
     * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
     * </pre>
     *
     * <code>optional string url_page = 3;</code>
     */
    public java.lang.String getUrlPage() {
      java.lang.Object ref = urlPage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        urlPage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 落地页地址
     * 以http或https开头，客户端直接以url_page作为网址渲染webview
     * 否则，为api.proxy.page 请求的page参数值，默认为空
     * 如：
     * value= https://www.google.com 直接以此网址加载webview。
     * value= main，代表通过api.proxy.page接口请求main页面。
     * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
     * </pre>
     *
     * <code>optional string url_page = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUrlPageBytes() {
      java.lang.Object ref = urlPage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        urlPage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int API_URL_FIELD_NUMBER = 4;
    private volatile java.lang.Object apiUrl_;
    /**
     * <pre>
     * api.plugin.proxy 请求转发请求时的目的URL
     * 此URL只能以http或者https开头，如无则为http
     * ====IMPORTANT====
     * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
     * </pre>
     *
     * <code>optional string api_url = 4;</code>
     */
    public java.lang.String getApiUrl() {
      java.lang.Object ref = apiUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apiUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * api.plugin.proxy 请求转发请求时的目的URL
     * 此URL只能以http或者https开头，如无则为http
     * ====IMPORTANT====
     * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
     * </pre>
     *
     * <code>optional string api_url = 4;</code>
     */
    public com.google.protobuf.ByteString
        getApiUrlBytes() {
      java.lang.Object ref = apiUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apiUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ICON_FIELD_NUMBER = 5;
    private volatile java.lang.Object icon_;
    /**
     * <pre>
     * 扩展图标文件，会显示在界面上
     * 如果以http开头，则代表着这是一个http协议的文件。
     * 否则，通过site-download功能下载此图片。
     * </pre>
     *
     * <code>optional string icon = 5;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        icon_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 扩展图标文件，会显示在界面上
     * 如果以http开头，则代表着这是一个http协议的文件。
     * 否则，通过site-download功能下载此图片。
     * </pre>
     *
     * <code>optional string icon = 5;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTH_KEY_FIELD_NUMBER = 6;
    private volatile java.lang.Object authKey_;
    /**
     * <pre>
     * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
     * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
     * site 使用auth_key 加密发送给plugin的整个proto
     * 同时 site使用auth_key解析 plugin传递过来的具体proto值
     * </pre>
     *
     * <code>optional string auth_key = 6;</code>
     */
    public java.lang.String getAuthKey() {
      java.lang.Object ref = authKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
     * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
     * site 使用auth_key 加密发送给plugin的整个proto
     * 同时 site使用auth_key解析 plugin传递过来的具体proto值
     * </pre>
     *
     * <code>optional string auth_key = 6;</code>
     */
    public com.google.protobuf.ByteString
        getAuthKeyBytes() {
      java.lang.Object ref = authKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALLOWED_IP_FIELD_NUMBER = 7;
    private volatile java.lang.Object allowedIp_;
    /**
     * <pre>
     * site server的innerAPI允许的pluginServer地址。
     * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
     * 如果有多个ip，以英文逗号[,]隔开。
     * </pre>
     *
     * <code>optional string allowed_ip = 7;</code>
     */
    public java.lang.String getAllowedIp() {
      java.lang.Object ref = allowedIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        allowedIp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * site server的innerAPI允许的pluginServer地址。
     * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
     * 如果有多个ip，以英文逗号[,]隔开。
     * </pre>
     *
     * <code>optional string allowed_ip = 7;</code>
     */
    public com.google.protobuf.ByteString
        getAllowedIpBytes() {
      java.lang.Object ref = allowedIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        allowedIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 8;
    private int position_;
    /**
     * <pre>
     * 扩展的位置【应该为一个枚举】
     * 值：首页、消息帧
     * 本次不允许首页并且消息帧这个类型。
     * </pre>
     *
     * <code>optional .core.PluginPosition position = 8;</code>
     */
    public int getPositionValue() {
      return position_;
    }
    /**
     * <pre>
     * 扩展的位置【应该为一个枚举】
     * 值：首页、消息帧
     * 本次不允许首页并且消息帧这个类型。
     * </pre>
     *
     * <code>optional .core.PluginPosition position = 8;</code>
     */
    public com.akaxin.proto.core.PluginProto.PluginPosition getPosition() {
      com.akaxin.proto.core.PluginProto.PluginPosition result = com.akaxin.proto.core.PluginProto.PluginPosition.valueOf(position_);
      return result == null ? com.akaxin.proto.core.PluginProto.PluginPosition.UNRECOGNIZED : result;
    }

    public static final int ORDER_FIELD_NUMBER = 9;
    private int order_;
    /**
     * <pre>
     * 显示顺序
     * 当一个位置，有多个扩展时，此处描述顺序，数字越小，排列越靠前（从上往下，从左往右排列）
     * </pre>
     *
     * <code>optional int32 order = 9;</code>
     */
    public int getOrder() {
      return order_;
    }

    public static final int DISPLAY_MODE_FIELD_NUMBER = 10;
    private int displayMode_;
    /**
     * <pre>
     * 展现方式【应该为一个枚举】
     * 默认、浮屏、分屏
     * 目前写死【默认】
     * </pre>
     *
     * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
     */
    public int getDisplayModeValue() {
      return displayMode_;
    }
    /**
     * <pre>
     * 展现方式【应该为一个枚举】
     * 默认、浮屏、分屏
     * 目前写死【默认】
     * </pre>
     *
     * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
     */
    public com.akaxin.proto.core.PluginProto.PluginDisplayMode getDisplayMode() {
      com.akaxin.proto.core.PluginProto.PluginDisplayMode result = com.akaxin.proto.core.PluginProto.PluginDisplayMode.valueOf(displayMode_);
      return result == null ? com.akaxin.proto.core.PluginProto.PluginDisplayMode.UNRECOGNIZED : result;
    }

    public static final int PERMISSION_STATUS_FIELD_NUMBER = 11;
    private int permissionStatus_;
    /**
     * <pre>
     * 可用状态
     * - 禁用
     * - 管理员可用
     * - 全员可用
     * </pre>
     *
     * <code>optional .core.PermissionStatus permission_status = 11;</code>
     */
    public int getPermissionStatusValue() {
      return permissionStatus_;
    }
    /**
     * <pre>
     * 可用状态
     * - 禁用
     * - 管理员可用
     * - 全员可用
     * </pre>
     *
     * <code>optional .core.PermissionStatus permission_status = 11;</code>
     */
    public com.akaxin.proto.core.PluginProto.PermissionStatus getPermissionStatus() {
      com.akaxin.proto.core.PluginProto.PermissionStatus result = com.akaxin.proto.core.PluginProto.PermissionStatus.valueOf(permissionStatus_);
      return result == null ? com.akaxin.proto.core.PluginProto.PermissionStatus.UNRECOGNIZED : result;
    }

    public static final int ENCRYPTED_SESSION_ID_BASE64_FIELD_NUMBER = 12;
    private volatile java.lang.Object encryptedSessionIdBase64_;
    /**
     * <pre>
     * 使用auth_key加密的用户session
     * </pre>
     *
     * <code>optional string encrypted_session_id_base64 = 12;</code>
     */
    public java.lang.String getEncryptedSessionIdBase64() {
      java.lang.Object ref = encryptedSessionIdBase64_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encryptedSessionIdBase64_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 使用auth_key加密的用户session
     * </pre>
     *
     * <code>optional string encrypted_session_id_base64 = 12;</code>
     */
    public com.google.protobuf.ByteString
        getEncryptedSessionIdBase64Bytes() {
      java.lang.Object ref = encryptedSessionIdBase64_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptedSessionIdBase64_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getUrlPageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, urlPage_);
      }
      if (!getApiUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, apiUrl_);
      }
      if (!getIconBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, icon_);
      }
      if (!getAuthKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, authKey_);
      }
      if (!getAllowedIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, allowedIp_);
      }
      if (position_ != com.akaxin.proto.core.PluginProto.PluginPosition.HOME_PAGE.getNumber()) {
        output.writeEnum(8, position_);
      }
      if (order_ != 0) {
        output.writeInt32(9, order_);
      }
      if (displayMode_ != com.akaxin.proto.core.PluginProto.PluginDisplayMode.NEW_PAGE.getNumber()) {
        output.writeEnum(10, displayMode_);
      }
      if (permissionStatus_ != com.akaxin.proto.core.PluginProto.PermissionStatus.DISABLED.getNumber()) {
        output.writeEnum(11, permissionStatus_);
      }
      if (!getEncryptedSessionIdBase64Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, encryptedSessionIdBase64_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getUrlPageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, urlPage_);
      }
      if (!getApiUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, apiUrl_);
      }
      if (!getIconBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, icon_);
      }
      if (!getAuthKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, authKey_);
      }
      if (!getAllowedIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, allowedIp_);
      }
      if (position_ != com.akaxin.proto.core.PluginProto.PluginPosition.HOME_PAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, position_);
      }
      if (order_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, order_);
      }
      if (displayMode_ != com.akaxin.proto.core.PluginProto.PluginDisplayMode.NEW_PAGE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, displayMode_);
      }
      if (permissionStatus_ != com.akaxin.proto.core.PluginProto.PermissionStatus.DISABLED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, permissionStatus_);
      }
      if (!getEncryptedSessionIdBase64Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, encryptedSessionIdBase64_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.akaxin.proto.core.PluginProto.Plugin)) {
        return super.equals(obj);
      }
      com.akaxin.proto.core.PluginProto.Plugin other = (com.akaxin.proto.core.PluginProto.Plugin) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && getUrlPage()
          .equals(other.getUrlPage());
      result = result && getApiUrl()
          .equals(other.getApiUrl());
      result = result && getIcon()
          .equals(other.getIcon());
      result = result && getAuthKey()
          .equals(other.getAuthKey());
      result = result && getAllowedIp()
          .equals(other.getAllowedIp());
      result = result && position_ == other.position_;
      result = result && (getOrder()
          == other.getOrder());
      result = result && displayMode_ == other.displayMode_;
      result = result && permissionStatus_ == other.permissionStatus_;
      result = result && getEncryptedSessionIdBase64()
          .equals(other.getEncryptedSessionIdBase64());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + URL_PAGE_FIELD_NUMBER;
      hash = (53 * hash) + getUrlPage().hashCode();
      hash = (37 * hash) + API_URL_FIELD_NUMBER;
      hash = (53 * hash) + getApiUrl().hashCode();
      hash = (37 * hash) + ICON_FIELD_NUMBER;
      hash = (53 * hash) + getIcon().hashCode();
      hash = (37 * hash) + AUTH_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getAuthKey().hashCode();
      hash = (37 * hash) + ALLOWED_IP_FIELD_NUMBER;
      hash = (53 * hash) + getAllowedIp().hashCode();
      hash = (37 * hash) + POSITION_FIELD_NUMBER;
      hash = (53 * hash) + position_;
      hash = (37 * hash) + ORDER_FIELD_NUMBER;
      hash = (53 * hash) + getOrder();
      hash = (37 * hash) + DISPLAY_MODE_FIELD_NUMBER;
      hash = (53 * hash) + displayMode_;
      hash = (37 * hash) + PERMISSION_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + permissionStatus_;
      hash = (37 * hash) + ENCRYPTED_SESSION_ID_BASE64_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptedSessionIdBase64().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.akaxin.proto.core.PluginProto.Plugin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.akaxin.proto.core.PluginProto.Plugin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code core.Plugin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:core.Plugin)
        com.akaxin.proto.core.PluginProto.PluginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_Plugin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_Plugin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.akaxin.proto.core.PluginProto.Plugin.class, com.akaxin.proto.core.PluginProto.Plugin.Builder.class);
      }

      // Construct using com.akaxin.proto.core.PluginProto.Plugin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        urlPage_ = "";

        apiUrl_ = "";

        icon_ = "";

        authKey_ = "";

        allowedIp_ = "";

        position_ = 0;

        order_ = 0;

        displayMode_ = 0;

        permissionStatus_ = 0;

        encryptedSessionIdBase64_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.akaxin.proto.core.PluginProto.internal_static_core_Plugin_descriptor;
      }

      public com.akaxin.proto.core.PluginProto.Plugin getDefaultInstanceForType() {
        return com.akaxin.proto.core.PluginProto.Plugin.getDefaultInstance();
      }

      public com.akaxin.proto.core.PluginProto.Plugin build() {
        com.akaxin.proto.core.PluginProto.Plugin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.akaxin.proto.core.PluginProto.Plugin buildPartial() {
        com.akaxin.proto.core.PluginProto.Plugin result = new com.akaxin.proto.core.PluginProto.Plugin(this);
        result.id_ = id_;
        result.name_ = name_;
        result.urlPage_ = urlPage_;
        result.apiUrl_ = apiUrl_;
        result.icon_ = icon_;
        result.authKey_ = authKey_;
        result.allowedIp_ = allowedIp_;
        result.position_ = position_;
        result.order_ = order_;
        result.displayMode_ = displayMode_;
        result.permissionStatus_ = permissionStatus_;
        result.encryptedSessionIdBase64_ = encryptedSessionIdBase64_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.akaxin.proto.core.PluginProto.Plugin) {
          return mergeFrom((com.akaxin.proto.core.PluginProto.Plugin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.akaxin.proto.core.PluginProto.Plugin other) {
        if (other == com.akaxin.proto.core.PluginProto.Plugin.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getUrlPage().isEmpty()) {
          urlPage_ = other.urlPage_;
          onChanged();
        }
        if (!other.getApiUrl().isEmpty()) {
          apiUrl_ = other.apiUrl_;
          onChanged();
        }
        if (!other.getIcon().isEmpty()) {
          icon_ = other.icon_;
          onChanged();
        }
        if (!other.getAuthKey().isEmpty()) {
          authKey_ = other.authKey_;
          onChanged();
        }
        if (!other.getAllowedIp().isEmpty()) {
          allowedIp_ = other.allowedIp_;
          onChanged();
        }
        if (other.position_ != 0) {
          setPositionValue(other.getPositionValue());
        }
        if (other.getOrder() != 0) {
          setOrder(other.getOrder());
        }
        if (other.displayMode_ != 0) {
          setDisplayModeValue(other.getDisplayModeValue());
        }
        if (other.permissionStatus_ != 0) {
          setPermissionStatusValue(other.getPermissionStatusValue());
        }
        if (!other.getEncryptedSessionIdBase64().isEmpty()) {
          encryptedSessionIdBase64_ = other.encryptedSessionIdBase64_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.akaxin.proto.core.PluginProto.Plugin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.akaxin.proto.core.PluginProto.Plugin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * 对于一个特定的Site，plugin.id 是唯一的。
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 对于一个特定的Site，plugin.id 是唯一的。
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 对于一个特定的Site，plugin.id 是唯一的。
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对于一个特定的Site，plugin.id 是唯一的。
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对于一个特定的Site，plugin.id 是唯一的。
       * </pre>
       *
       * <code>optional string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * 扩展名字，会显示在界面上
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 扩展名字，会显示在界面上
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 扩展名字，会显示在界面上
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展名字，会显示在界面上
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展名字，会显示在界面上
       * </pre>
       *
       * <code>optional string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object urlPage_ = "";
      /**
       * <pre>
       * 落地页地址
       * 以http或https开头，客户端直接以url_page作为网址渲染webview
       * 否则，为api.proxy.page 请求的page参数值，默认为空
       * 如：
       * value= https://www.google.com 直接以此网址加载webview。
       * value= main，代表通过api.proxy.page接口请求main页面。
       * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
       * </pre>
       *
       * <code>optional string url_page = 3;</code>
       */
      public java.lang.String getUrlPage() {
        java.lang.Object ref = urlPage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urlPage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 落地页地址
       * 以http或https开头，客户端直接以url_page作为网址渲染webview
       * 否则，为api.proxy.page 请求的page参数值，默认为空
       * 如：
       * value= https://www.google.com 直接以此网址加载webview。
       * value= main，代表通过api.proxy.page接口请求main页面。
       * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
       * </pre>
       *
       * <code>optional string url_page = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUrlPageBytes() {
        java.lang.Object ref = urlPage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urlPage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 落地页地址
       * 以http或https开头，客户端直接以url_page作为网址渲染webview
       * 否则，为api.proxy.page 请求的page参数值，默认为空
       * 如：
       * value= https://www.google.com 直接以此网址加载webview。
       * value= main，代表通过api.proxy.page接口请求main页面。
       * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
       * </pre>
       *
       * <code>optional string url_page = 3;</code>
       */
      public Builder setUrlPage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        urlPage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 落地页地址
       * 以http或https开头，客户端直接以url_page作为网址渲染webview
       * 否则，为api.proxy.page 请求的page参数值，默认为空
       * 如：
       * value= https://www.google.com 直接以此网址加载webview。
       * value= main，代表通过api.proxy.page接口请求main页面。
       * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
       * </pre>
       *
       * <code>optional string url_page = 3;</code>
       */
      public Builder clearUrlPage() {
        
        urlPage_ = getDefaultInstance().getUrlPage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 落地页地址
       * 以http或https开头，客户端直接以url_page作为网址渲染webview
       * 否则，为api.proxy.page 请求的page参数值，默认为空
       * 如：
       * value= https://www.google.com 直接以此网址加载webview。
       * value= main，代表通过api.proxy.page接口请求main页面。
       * value= 空，代表通过api.proxy.page接口请求空页面（pluginServer自己把空返回默认主页）
       * </pre>
       *
       * <code>optional string url_page = 3;</code>
       */
      public Builder setUrlPageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        urlPage_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object apiUrl_ = "";
      /**
       * <pre>
       * api.plugin.proxy 请求转发请求时的目的URL
       * 此URL只能以http或者https开头，如无则为http
       * ====IMPORTANT====
       * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
       * </pre>
       *
       * <code>optional string api_url = 4;</code>
       */
      public java.lang.String getApiUrl() {
        java.lang.Object ref = apiUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apiUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * api.plugin.proxy 请求转发请求时的目的URL
       * 此URL只能以http或者https开头，如无则为http
       * ====IMPORTANT====
       * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
       * </pre>
       *
       * <code>optional string api_url = 4;</code>
       */
      public com.google.protobuf.ByteString
          getApiUrlBytes() {
        java.lang.Object ref = apiUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apiUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * api.plugin.proxy 请求转发请求时的目的URL
       * 此URL只能以http或者https开头，如无则为http
       * ====IMPORTANT====
       * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
       * </pre>
       *
       * <code>optional string api_url = 4;</code>
       */
      public Builder setApiUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        apiUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * api.plugin.proxy 请求转发请求时的目的URL
       * 此URL只能以http或者https开头，如无则为http
       * ====IMPORTANT====
       * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
       * </pre>
       *
       * <code>optional string api_url = 4;</code>
       */
      public Builder clearApiUrl() {
        
        apiUrl_ = getDefaultInstance().getApiUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * api.plugin.proxy 请求转发请求时的目的URL
       * 此URL只能以http或者https开头，如无则为http
       * ====IMPORTANT====
       * 此api是给server用的，不允许传递此值到客户端。如复用此结构必须在传递给客户端之前将此值置空。
       * </pre>
       *
       * <code>optional string api_url = 4;</code>
       */
      public Builder setApiUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        apiUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object icon_ = "";
      /**
       * <pre>
       * 扩展图标文件，会显示在界面上
       * 如果以http开头，则代表着这是一个http协议的文件。
       * 否则，通过site-download功能下载此图片。
       * </pre>
       *
       * <code>optional string icon = 5;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 扩展图标文件，会显示在界面上
       * 如果以http开头，则代表着这是一个http协议的文件。
       * 否则，通过site-download功能下载此图片。
       * </pre>
       *
       * <code>optional string icon = 5;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 扩展图标文件，会显示在界面上
       * 如果以http开头，则代表着这是一个http协议的文件。
       * 否则，通过site-download功能下载此图片。
       * </pre>
       *
       * <code>optional string icon = 5;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展图标文件，会显示在界面上
       * 如果以http开头，则代表着这是一个http协议的文件。
       * 否则，通过site-download功能下载此图片。
       * </pre>
       *
       * <code>optional string icon = 5;</code>
       */
      public Builder clearIcon() {
        
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展图标文件，会显示在界面上
       * 如果以http开头，则代表着这是一个http协议的文件。
       * 否则，通过site-download功能下载此图片。
       * </pre>
       *
       * <code>optional string icon = 5;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        icon_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object authKey_ = "";
      /**
       * <pre>
       * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
       * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
       * site 使用auth_key 加密发送给plugin的整个proto
       * 同时 site使用auth_key解析 plugin传递过来的具体proto值
       * </pre>
       *
       * <code>optional string auth_key = 6;</code>
       */
      public java.lang.String getAuthKey() {
        java.lang.Object ref = authKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          authKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
       * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
       * site 使用auth_key 加密发送给plugin的整个proto
       * 同时 site使用auth_key解析 plugin传递过来的具体proto值
       * </pre>
       *
       * <code>optional string auth_key = 6;</code>
       */
      public com.google.protobuf.ByteString
          getAuthKeyBytes() {
        java.lang.Object ref = authKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          authKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
       * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
       * site 使用auth_key 加密发送给plugin的整个proto
       * 同时 site使用auth_key解析 plugin传递过来的具体proto值
       * </pre>
       *
       * <code>optional string auth_key = 6;</code>
       */
      public Builder setAuthKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        authKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
       * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
       * site 使用auth_key 加密发送给plugin的整个proto
       * 同时 site使用auth_key解析 plugin传递过来的具体proto值
       * </pre>
       *
       * <code>optional string auth_key = 6;</code>
       */
      public Builder clearAuthKey() {
        
        authKey_ = getDefaultInstance().getAuthKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pluginServer 在 请求 siteServer的innerAPI时，使用此值加密数据，以证明身份。
       * 添加扩展时由SiteServer自动生成并记录，为64个[A-Za-z0-9]组成的随机字符串。
       * site 使用auth_key 加密发送给plugin的整个proto
       * 同时 site使用auth_key解析 plugin传递过来的具体proto值
       * </pre>
       *
       * <code>optional string auth_key = 6;</code>
       */
      public Builder setAuthKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        authKey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object allowedIp_ = "";
      /**
       * <pre>
       * site server的innerAPI允许的pluginServer地址。
       * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
       * 如果有多个ip，以英文逗号[,]隔开。
       * </pre>
       *
       * <code>optional string allowed_ip = 7;</code>
       */
      public java.lang.String getAllowedIp() {
        java.lang.Object ref = allowedIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          allowedIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * site server的innerAPI允许的pluginServer地址。
       * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
       * 如果有多个ip，以英文逗号[,]隔开。
       * </pre>
       *
       * <code>optional string allowed_ip = 7;</code>
       */
      public com.google.protobuf.ByteString
          getAllowedIpBytes() {
        java.lang.Object ref = allowedIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          allowedIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * site server的innerAPI允许的pluginServer地址。
       * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
       * 如果有多个ip，以英文逗号[,]隔开。
       * </pre>
       *
       * <code>optional string allowed_ip = 7;</code>
       */
      public Builder setAllowedIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        allowedIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * site server的innerAPI允许的pluginServer地址。
       * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
       * 如果有多个ip，以英文逗号[,]隔开。
       * </pre>
       *
       * <code>optional string allowed_ip = 7;</code>
       */
      public Builder clearAllowedIp() {
        
        allowedIp_ = getDefaultInstance().getAllowedIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * site server的innerAPI允许的pluginServer地址。
       * 默认为127.0.0.1，如为空则代表不限制，此外：支持网络掩码的配置方式。
       * 如果有多个ip，以英文逗号[,]隔开。
       * </pre>
       *
       * <code>optional string allowed_ip = 7;</code>
       */
      public Builder setAllowedIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        allowedIp_ = value;
        onChanged();
        return this;
      }

      private int position_ = 0;
      /**
       * <pre>
       * 扩展的位置【应该为一个枚举】
       * 值：首页、消息帧
       * 本次不允许首页并且消息帧这个类型。
       * </pre>
       *
       * <code>optional .core.PluginPosition position = 8;</code>
       */
      public int getPositionValue() {
        return position_;
      }
      /**
       * <pre>
       * 扩展的位置【应该为一个枚举】
       * 值：首页、消息帧
       * 本次不允许首页并且消息帧这个类型。
       * </pre>
       *
       * <code>optional .core.PluginPosition position = 8;</code>
       */
      public Builder setPositionValue(int value) {
        position_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展的位置【应该为一个枚举】
       * 值：首页、消息帧
       * 本次不允许首页并且消息帧这个类型。
       * </pre>
       *
       * <code>optional .core.PluginPosition position = 8;</code>
       */
      public com.akaxin.proto.core.PluginProto.PluginPosition getPosition() {
        com.akaxin.proto.core.PluginProto.PluginPosition result = com.akaxin.proto.core.PluginProto.PluginPosition.valueOf(position_);
        return result == null ? com.akaxin.proto.core.PluginProto.PluginPosition.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 扩展的位置【应该为一个枚举】
       * 值：首页、消息帧
       * 本次不允许首页并且消息帧这个类型。
       * </pre>
       *
       * <code>optional .core.PluginPosition position = 8;</code>
       */
      public Builder setPosition(com.akaxin.proto.core.PluginProto.PluginPosition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        position_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 扩展的位置【应该为一个枚举】
       * 值：首页、消息帧
       * 本次不允许首页并且消息帧这个类型。
       * </pre>
       *
       * <code>optional .core.PluginPosition position = 8;</code>
       */
      public Builder clearPosition() {
        
        position_ = 0;
        onChanged();
        return this;
      }

      private int order_ ;
      /**
       * <pre>
       * 显示顺序
       * 当一个位置，有多个扩展时，此处描述顺序，数字越小，排列越靠前（从上往下，从左往右排列）
       * </pre>
       *
       * <code>optional int32 order = 9;</code>
       */
      public int getOrder() {
        return order_;
      }
      /**
       * <pre>
       * 显示顺序
       * 当一个位置，有多个扩展时，此处描述顺序，数字越小，排列越靠前（从上往下，从左往右排列）
       * </pre>
       *
       * <code>optional int32 order = 9;</code>
       */
      public Builder setOrder(int value) {
        
        order_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 显示顺序
       * 当一个位置，有多个扩展时，此处描述顺序，数字越小，排列越靠前（从上往下，从左往右排列）
       * </pre>
       *
       * <code>optional int32 order = 9;</code>
       */
      public Builder clearOrder() {
        
        order_ = 0;
        onChanged();
        return this;
      }

      private int displayMode_ = 0;
      /**
       * <pre>
       * 展现方式【应该为一个枚举】
       * 默认、浮屏、分屏
       * 目前写死【默认】
       * </pre>
       *
       * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
       */
      public int getDisplayModeValue() {
        return displayMode_;
      }
      /**
       * <pre>
       * 展现方式【应该为一个枚举】
       * 默认、浮屏、分屏
       * 目前写死【默认】
       * </pre>
       *
       * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
       */
      public Builder setDisplayModeValue(int value) {
        displayMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 展现方式【应该为一个枚举】
       * 默认、浮屏、分屏
       * 目前写死【默认】
       * </pre>
       *
       * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
       */
      public com.akaxin.proto.core.PluginProto.PluginDisplayMode getDisplayMode() {
        com.akaxin.proto.core.PluginProto.PluginDisplayMode result = com.akaxin.proto.core.PluginProto.PluginDisplayMode.valueOf(displayMode_);
        return result == null ? com.akaxin.proto.core.PluginProto.PluginDisplayMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 展现方式【应该为一个枚举】
       * 默认、浮屏、分屏
       * 目前写死【默认】
       * </pre>
       *
       * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
       */
      public Builder setDisplayMode(com.akaxin.proto.core.PluginProto.PluginDisplayMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        displayMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 展现方式【应该为一个枚举】
       * 默认、浮屏、分屏
       * 目前写死【默认】
       * </pre>
       *
       * <code>optional .core.PluginDisplayMode display_mode = 10;</code>
       */
      public Builder clearDisplayMode() {
        
        displayMode_ = 0;
        onChanged();
        return this;
      }

      private int permissionStatus_ = 0;
      /**
       * <pre>
       * 可用状态
       * - 禁用
       * - 管理员可用
       * - 全员可用
       * </pre>
       *
       * <code>optional .core.PermissionStatus permission_status = 11;</code>
       */
      public int getPermissionStatusValue() {
        return permissionStatus_;
      }
      /**
       * <pre>
       * 可用状态
       * - 禁用
       * - 管理员可用
       * - 全员可用
       * </pre>
       *
       * <code>optional .core.PermissionStatus permission_status = 11;</code>
       */
      public Builder setPermissionStatusValue(int value) {
        permissionStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 可用状态
       * - 禁用
       * - 管理员可用
       * - 全员可用
       * </pre>
       *
       * <code>optional .core.PermissionStatus permission_status = 11;</code>
       */
      public com.akaxin.proto.core.PluginProto.PermissionStatus getPermissionStatus() {
        com.akaxin.proto.core.PluginProto.PermissionStatus result = com.akaxin.proto.core.PluginProto.PermissionStatus.valueOf(permissionStatus_);
        return result == null ? com.akaxin.proto.core.PluginProto.PermissionStatus.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 可用状态
       * - 禁用
       * - 管理员可用
       * - 全员可用
       * </pre>
       *
       * <code>optional .core.PermissionStatus permission_status = 11;</code>
       */
      public Builder setPermissionStatus(com.akaxin.proto.core.PluginProto.PermissionStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        permissionStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 可用状态
       * - 禁用
       * - 管理员可用
       * - 全员可用
       * </pre>
       *
       * <code>optional .core.PermissionStatus permission_status = 11;</code>
       */
      public Builder clearPermissionStatus() {
        
        permissionStatus_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object encryptedSessionIdBase64_ = "";
      /**
       * <pre>
       * 使用auth_key加密的用户session
       * </pre>
       *
       * <code>optional string encrypted_session_id_base64 = 12;</code>
       */
      public java.lang.String getEncryptedSessionIdBase64() {
        java.lang.Object ref = encryptedSessionIdBase64_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          encryptedSessionIdBase64_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 使用auth_key加密的用户session
       * </pre>
       *
       * <code>optional string encrypted_session_id_base64 = 12;</code>
       */
      public com.google.protobuf.ByteString
          getEncryptedSessionIdBase64Bytes() {
        java.lang.Object ref = encryptedSessionIdBase64_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encryptedSessionIdBase64_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 使用auth_key加密的用户session
       * </pre>
       *
       * <code>optional string encrypted_session_id_base64 = 12;</code>
       */
      public Builder setEncryptedSessionIdBase64(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encryptedSessionIdBase64_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 使用auth_key加密的用户session
       * </pre>
       *
       * <code>optional string encrypted_session_id_base64 = 12;</code>
       */
      public Builder clearEncryptedSessionIdBase64() {
        
        encryptedSessionIdBase64_ = getDefaultInstance().getEncryptedSessionIdBase64();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 使用auth_key加密的用户session
       * </pre>
       *
       * <code>optional string encrypted_session_id_base64 = 12;</code>
       */
      public Builder setEncryptedSessionIdBase64Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        encryptedSessionIdBase64_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:core.Plugin)
    }

    // @@protoc_insertion_point(class_scope:core.Plugin)
    private static final com.akaxin.proto.core.PluginProto.Plugin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.akaxin.proto.core.PluginProto.Plugin();
    }

    public static com.akaxin.proto.core.PluginProto.Plugin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Plugin>
        PARSER = new com.google.protobuf.AbstractParser<Plugin>() {
      public Plugin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Plugin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Plugin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Plugin> getParserForType() {
      return PARSER;
    }

    public com.akaxin.proto.core.PluginProto.Plugin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_ProxyPluginPackage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_ProxyPluginPackage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_ProxyPluginPackage_PluginHeaderEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_ProxyPluginPackage_PluginHeaderEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_core_Plugin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_core_Plugin_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021core/plugin.proto\022\004core\032\017core/core.pro" +
      "to\"\277\001\n\022ProxyPluginPackage\022A\n\rplugin_head" +
      "er\030\001 \003(\0132*.core.ProxyPluginPackage.Plugi" +
      "nHeaderEntry\022\014\n\004data\030\002 \001(\t\022#\n\nerror_info" +
      "\030\003 \001(\0132\017.core.ErrorInfo\0323\n\021PluginHeaderE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\"\267\002\n" +
      "\006Plugin\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010url" +
      "_page\030\003 \001(\t\022\017\n\007api_url\030\004 \001(\t\022\014\n\004icon\030\005 \001" +
      "(\t\022\020\n\010auth_key\030\006 \001(\t\022\022\n\nallowed_ip\030\007 \001(\t" +
      "\022&\n\010position\030\010 \001(\0162\024.core.PluginPosition",
      "\022\r\n\005order\030\t \001(\005\022-\n\014display_mode\030\n \001(\0162\027." +
      "core.PluginDisplayMode\0221\n\021permission_sta" +
      "tus\030\013 \001(\0162\026.core.PermissionStatus\022#\n\033enc" +
      "rypted_session_id_base64\030\014 \001(\t*\223\001\n\017Plugi" +
      "nHeaderKey\022\022\n\016CLIENT_VERSION\020\000\022\027\n\023CLIENT" +
      "_SITE_USER_ID\020\001\022\032\n\026CLIENT_SITE_SESSION_I" +
      "D\020\002\022\022\n\016PLUGIN_REFERER\020\003\022\024\n\020PLUGIN_TIMEST" +
      "AMP\020\004\022\r\n\tPLUGIN_ID\020\005*/\n\020PermissionStatus" +
      "\022\014\n\010DISABLED\020\000\022\r\n\tAVAILABLE\020\001*-\n\016PluginP" +
      "osition\022\r\n\tHOME_PAGE\020\000\022\014\n\010MSG_PAGE\020\001*H\n\021",
      "PluginDisplayMode\022\014\n\010NEW_PAGE\020\000\022\023\n\017FLOAT" +
      "ING_SCREEN\020\001\022\020\n\014SPLIT_SCREEN\020\002B$\n\025com.ak" +
      "axin.proto.coreB\013PluginProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.akaxin.proto.core.CoreProto.getDescriptor(),
        }, assigner);
    internal_static_core_ProxyPluginPackage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_core_ProxyPluginPackage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_ProxyPluginPackage_descriptor,
        new java.lang.String[] { "PluginHeader", "Data", "ErrorInfo", });
    internal_static_core_ProxyPluginPackage_PluginHeaderEntry_descriptor =
      internal_static_core_ProxyPluginPackage_descriptor.getNestedTypes().get(0);
    internal_static_core_ProxyPluginPackage_PluginHeaderEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_ProxyPluginPackage_PluginHeaderEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_core_Plugin_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_core_Plugin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_core_Plugin_descriptor,
        new java.lang.String[] { "Id", "Name", "UrlPage", "ApiUrl", "Icon", "AuthKey", "AllowedIp", "Position", "Order", "DisplayMode", "PermissionStatus", "EncryptedSessionIdBase64", });
    com.akaxin.proto.core.CoreProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
